<beans xmlns="http://www.springframework.org/schema/beans"
              xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
              xmlns:lang="http://www.springframework.org/schema/lang"
              xsi:schemaLocation="
              http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
              http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang.xsd
              http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
           ">



  <camelContext trace="false" xmlns="http://camel.apache.org/schema/spring">
  <route>
    <from id="start" uri="netty-http:http://localhost:8088/foo"/>

      <transform>
       <groovy>
         import org.apache.camel.*
         import org.apache.http.client.methods.HttpPost
         import org.apache.http.client.*
         import org.apache.http.impl.client.*
         import org.apache.http.entity.*
         import org.apache.commons.io.IOUtils

         String urlFOC1="http://localhost:8008"
         String urlFOC2="http://localhost:8009"

         println("### transformation is called  $exchange.in.headers ###")

         /**
          * method to call webservice
          */
         def callWebService(String url,String xml){
             HttpClient httpclient = new DefaultHttpClient()
             HttpPost post = new HttpPost(url)
             if (exchange.in.headers.containsKey("Content-Type")){
                post.setHeader("Content-Type",exchange.in.getHeader("Content-Type"))
             }

             if (exchange.in.headers.containsKey("SOAPAction")){
                post.setHeader("SOAPAction",exchange.in.getHeader("SOAPAction"))
             }



             def entity =  new StringEntity(xml,ContentType.APPLICATION_XML)
             post.setEntity(entity)
             def response = httpclient.execute(post)

             return response
         }

         //transform exchange to xml
         StringWriter writer = new StringWriter();
         IOUtils.copy(exchange.in.body, writer, "UTF-8")
         requstXML = writer.toString()
         println("requstXML: $requstXML")
         //Call FOC1
         def responseFOC1 =  callWebService(urlFOC1,requstXML)
         println("response FOC1 status code: $responseFOC1.statusLine.statusCode")


         if (responseFOC1.statusLine.statusCode != 500){
          // we did successful call to FOC1 and trying to call FOC2


          def responseFOC2

          try{
            responseFOC2 = callWebService(urlFOC2,requstXML)
          } catch(ex){
            println("error at calling FOC2")
            ex.printStackTrace()
          }

          if (responseFOC2 ==null || responseFOC2.statusLine.statusCode == 500){
                //TODO: call soap delete command ...
                // we don't know any wsdl at the moment
                // Also we will send raw xml content to soap  delete operation
                //for example :
                '''\
                <![CDATA[

                <soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:web="http://skyguide.ch/web">
                   <soapenv:Header/>
                   <soapenv:Body>
                      <web:delete>
                         <web:a>skyguide</web:a>
                      </web:delete>
                   </soapenv:Body>
                 </soapenv:Envelope>
                ]]>
                '''
           }
         }

         //propagande response back  to the caller
         exchange.out.body = responseFOC1.entity.content


       </groovy>

     </transform>

    </route>
  </camelContext>



</beans>
