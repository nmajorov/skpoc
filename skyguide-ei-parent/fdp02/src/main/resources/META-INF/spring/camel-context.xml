<beans xmlns="http://www.springframework.org/schema/beans"
              xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
              xmlns:lang="http://www.springframework.org/schema/lang"
              xsi:schemaLocation="
              http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
              http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang.xsd
              http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
           ">



  <camelContext trace="false" xmlns="http://camel.apache.org/schema/spring">
  <route>
    <from id="start" uri="netty-http:http://localhost:8088/foo"/>

      <transform>
       <groovy>
         import org.apache.camel.*
         import org.apache.http.client.methods.HttpPost
         import org.apache.http.client.*
         import org.apache.http.impl.client.*
         import org.apache.http.entity.*
         import org.apache.commons.io.IOUtils

         String urlFOC1="http://localhost:8008"
         String urlFOC2="http://localhost:8009"

         println("### transformation is called  $exchange.in.headers ###")

         HttpClient httpclient = new DefaultHttpClient()
         HttpPost post = new HttpPost(urlFOC1)
         if (exchange.in.headers.containsKey("Content-Type")){
            post.setHeader("Content-Type",exchange.in.getHeader("Content-Type"))
         }

         if (exchange.in.headers.containsKey("SOAPAction")){
            post.setHeader("SOAPAction",exchange.in.getHeader("SOAPAction"))
         }

         StringWriter writer = new StringWriter();
         IOUtils.copy(exchange.in.body, writer, "UTF-8")
         println("in body: $writer.buffer)")

         def entity =  new StringEntity(writer.toString(),ContentType.APPLICATION_XML)
         post.setEntity(entity)
         def response = httpclient.execute(post)
         println("response code: $response.statusLine.statusCode")

         exchange.out.body = response.entity.content

       </groovy>

     </transform>

    </route>
  </camelContext>



</beans>
